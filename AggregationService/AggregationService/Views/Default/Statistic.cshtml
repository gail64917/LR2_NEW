
@{
    ViewData["Title"] = "Statistic";
}

<h2>Statistic</h2>

@model AggregationService.Models.ModelsForView.StatisticFake;
<br /><br />
<div id="chartContainer" style="height: 300px; width: 100%;"></div>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

<script>
    $(document).ready(function () {
        //Load Data Here
        var chartData = null;
        var numb = 10;
        $.ajax({
            url: "https://localhost:44336/GetData",
            type: 'GET',
            async: false,   
            contentType: 'application/json',
            headers: {
                "Authorization": "Bearer " + tkn
            },
            //dataType: 'json',
            //data: '',
            success: function (d) {
                chartData = d;
                                
            },
            error: function () {
                alert('Error!');
            }
        }).done(function () {
            //drawChart(chartData);
            });

        console.log(chartData);

        //________________________________________________________________
        //_______________________________________________________________



        var chart = new CanvasJS.Chart("chartContainer", {
            title: {
                text: "Users Last Activity"
            },
            data: [
                {
                    // Change type to "doughnut", "line", "splineArea", etc.
                    type: "column",
                    dataPoints: [
                        { label: "sad", y: 15 },
                        { label: "admin", y: 15 },
                        { label: "", y: 15 },
                        { label: "null", y: 15 }
                    ]
                }
            ]
        });
        chart.render();

        var chart = AmCharts.makeChart("chartdiv", {
            "type": "serial",
            "theme": "light",
            "dataProvider": chartData,
            "valueAxes": [{
                "gridColor": "#FFFFFF",
                "gridAlpha": 0.2,
                "dashLength": 0
            }],
            "gridAboveGraphs": true,
            "startDuration": 1,
            "graphs": [{
                "balloonText": "[[category]]: <b>[[value]]</b>",
                "fillAlphas": 0.8,
                "lineAlpha": 0.2,
                "type": "column",
                "valueField": "visits"
            }],
            "chartCursor": {
                "categoryBalloonEnabled": false,
                "cursorAlpha": 0,
                "zoomable": false
            },
            "categoryField": "user",
            "categoryAxis": {
                "gridPosition": "start",
                "gridAlpha": 0,
                "tickPosition": "start",
                "tickLength": 20
            },
            "export": {
                "enabled": true
            }
        }); 
    });
    //__________________________________________________________________
</script>

<br /><br /><br />
<div id="chartdiv"></div>
<br /><br /><br />
<table class="table">
    <thead>
        <tr>
            <th>
                Имя страницы
            </th>
            <th>
                Время
            </th>
            <th>
                Действие
            </th>
            <th>
                Клиент
            </th>
            <th>
                Результат
            </th>
            <th>
                Пользователь
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.statistic)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeStamp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Action)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Client)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Result)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User)
                </td>
            </tr>
        }
    </tbody>
</table>